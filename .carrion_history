arr = Array()
arr.append(10)
arr.append(10,11)
arr.append(12)
arr.append(11)
arr.reverse()
arr.math()
arr = Array()
arr.append(10)
arr.append(20)
arr.append(30)
arr.sort()
arr = Array()
arr.append(10)
arr.append(20)
arr.append(30)
arr.reverse()
arr[4] = 10
arr = Array()
:qa!
i"hello world"
x = 10
i"Value: ${x}"
i"Value: ${x:<10}"
i"Value: ${}"
i"Value: ${}",x
i"Value: ${x}",x
print(i"x: ${x}")
is_sametype()
is_sametype(10,10)
is_sametype([],[])
is_sametype([],{})
int
x
str
help
arr = Array()
arr = ArrayLib()
arr.append(10)
arr.append(20)
arr.print()
arr.reverse()
arr.to_string()
arr.to_array()
arr.to_array()[0]
arr.remove_at(1)
arr.print()
arr.pop()
arr.reverse()
arr.slice()
arr = Array()
arr.pop()
arr.append(10)
arr.pop()
arr.print()
arr = Array()
arr.append(10)
arr.append(20)
arr.to_array()[-1]
arr[-1]
arr.reverse()
x = 10
print(x)
type(x)
y = [10]
z = [10]
y + z
a = Array()
a.append(10)
a = Array()
a.append(10)
a = Array()
a.append(10)
a = Array()
a.append(10)
arr = []
arr.append(10)
string = "example"
print(string)
print(string[0])
arr = []
arr.append(10)
arr = Array()
arr.append(10)
help
nvim
help()
Array
Array()
help
help()
version()
help_functions()
modules()
version()
qa
qa!
help
help()
help
quti
mimir
help
help()
version()
arr = Array()
arr.append(10)
print("test")
self.elements = []
arr = Array([1, 2, 3])
print(arr.length())
print(arr.append)
