"""
Operating System interface grimoire providing system-level operations and utilities.

This grimoire wraps the underlying OS interface with convenient methods for
process execution, environment management, file system operations, and
system utilities. It serves as a bridge between Carrion applications
and the operating system.

Key Features:
- Command execution with output capture
- Environment variable management
- Directory navigation and manipulation
- File system operations (list, remove, create directories)
- Path expansion and environment variable substitution
- Cross-platform compatibility

Usage:
    os = OS()
    result = os.run("ls", ["-la"], True)
    current_dir = os.cwd()
    os.setenv("MYVAR", "value")
    files = os.listdir("/tmp")
"""
grim OS:
    """
    Execute a system command with optional arguments and output capture.
    
    Args:
        command (str): The command to execute
        args (list): Command arguments (default: [])
        captureOutput (bool): Whether to capture command output (default: False)
        
    Returns:
        dict: Command result with exit code and output (if captured)
    """
    spell run(command, args=[], captureOutput=False):
        return osRunCommand(command, args, captureOutput)
    
    """
    Get the value of an environment variable.
    
    Args:
        key (str): Environment variable name
        
    Returns:
        str: Environment variable value, or None if not found
    """
    spell getenv(key):
        return osGetEnv(key)
    
    """
    Set an environment variable.
    
    Args:
        key (str): Environment variable name
        value (str): Environment variable value
        
    Returns:
        bool: True if successful, False otherwise
    """
    spell setenv(key, value):
        return osSetEnv(key, value)
    
    """
    Get the current working directory.
    
    Returns:
        str: Path to the current working directory
    """
    spell cwd():
        return osGetCwd()
    
    """
    Change the current working directory.
    
    Args:
        path (str): Path to change to
        
    Returns:
        bool: True if successful, False otherwise
    """
    spell chdir(path):
        return osChdir(path)
    
    """
    Sleep for the specified number of seconds.
    
    Args:
        seconds (float): Number of seconds to sleep
        
    Returns:
        None
    """
    spell sleep(seconds):
        return osSleep(seconds)
    
    """
    List the contents of a directory.
    
    Args:
        path (str): Directory path to list (default: ".")
        
    Returns:
        list: List of file and directory names
    """
    spell listdir(path="."):
        return osListDir(path)
    
    """
    Remove a file or directory.
    
    Args:
        path (str): Path to remove
        
    Returns:
        bool: True if successful, False otherwise
    """
    spell remove(path):
        return osRemove(path)
    
    """
    Create a directory with specified permissions.
    
    Args:
        path (str): Directory path to create
        perm (int): Permission flags (default: 0755)
        
    Returns:
        bool: True if successful, False otherwise
    """
    spell mkdir(path, perm=0755):
        return osMkdir(path, perm)
    
    """
    Expand environment variables in a path string.
    
    Replaces ${VAR} and $VAR patterns with their environment values.
    
    Args:
        path_str (str): Path string with environment variables
        
    Returns:
        str: Path with expanded environment variables
    """
    spell expandEnv(path_str):
        return osExpandEnv(path_str)

