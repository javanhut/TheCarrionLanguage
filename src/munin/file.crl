grim File:
    init(path="", mode=""):
        if path != "":
            self.handle = fileOpen(path, mode)
            self.path = path
            self.mode = mode
            self._closed = False
        else:
            self.handle = None
            self.path = ""
            self.mode = ""
            self._closed = True
        
    spell file_open(path, mode="r"):
        if self.handle != None and not self._closed:
            self.close()
        self.handle = fileOpen(path, mode)
        self.path = path
        self.mode = mode
        self._closed = False
        return self
        
    spell file_read(size=-1):
        if self._closed or self.handle == None:
            return None
        if size == -1:
            return fileReadHandle(self.handle)
        else:
            return fileReadHandle(self.handle, size)
        
    spell file_write(content):
        if self._closed or self.handle == None:
            return None
        return fileWriteHandle(self.handle, content)
        
    spell seek(offset, whence=0):
        if self._closed or self.handle == None:
            return None
        return fileSeek(self.handle, offset, whence)
        
    spell tell():
        if self._closed or self.handle == None:
            return None
        return fileTell(self.handle)
        
    spell flush():
        if self._closed or self.handle == None:
            return None
        return fileFlush(self.handle)
        
    spell close():
        if not self._closed and self.handle != None:
            fileClose(self.handle)
            self._closed = True
            self.handle = None
        return None
        
    # Backwards compatibility methods
    spell read_content():
        return self.file_read()
        
    spell write_content(content):
        return self.file_write(content)
    # Static convenience methods using path-based operations
    spell read(path):
        return fileRead(path)
    
    spell write(path, content):
        return fileWrite(path, content)
    
    spell append(path, content):
        return fileAppend(path, content)
    
    spell exists(path):
        return fileExists(path)
    
    spell open(path, mode="r"):
        return File(path, mode)
