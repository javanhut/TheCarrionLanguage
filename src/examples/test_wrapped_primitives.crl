```
Comprehensive test script for wrapped primitive functionality in Carrion.

This script demonstrates how primitive data types (integers, strings, booleans,
floats) are automatically wrapped with grimoire objects that provide enhanced
methods and functionality. Shows the seamless integration between basic values
and object-oriented programming features.
```

# Test Integer wrapping and enhanced methods
i = 10
print("Integer value: " + str(i))
print("Binary representation: " + i.to_bin())
print("Hexadecimal representation: " + i.to_hex())  
print("Is even: " + str(i.is_even()))
print("Is prime: " + str(i.is_prime()))

# Test that arithmetic operations still work with wrapped integers
j = 5  
result = i + j
print("Addition result: " + str(result))
print("Result type: " + type(result))

# Test String wrapping and enhanced string methods  
s = "Hello World"
print("String value: " + s)
print("Length: " + str(s.length()))
print("Uppercase: " + s.upper())
print("Contains 'World': " + str(s.contains("World")))

# Test Boolean wrapping and logical operation methods
b = True
print("Boolean value: " + str(b))
print("Negated: " + str(b.negate()))
print("To int: " + str(b.to_int()))

# Test Float wrapping and mathematical operation methods
f = 3.14
print("Float value: " + str(f))
print("Rounded: " + str(f.round(1)))
print("Is integer: " + str(f.is_integer()))